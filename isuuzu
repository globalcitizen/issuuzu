#!/usr/bin/php
<?php
if(isset($argv[1])) {
 $url = $argv[1];
}
else { usage(); }

if(!preg_match('/^https?:\/\/.*$/i',$url)) {
 print "ERROR: Supplied string '$url' does not appear to be an HTTP(S) URL\n";
 usage();
}

print "Fetching URL '$url'\n";
$initial_page_data = http_fetch($url);
#print "Fetched data:\n";
#print $initial_page_data . "\n";
$url = preg_match("/(?:https:\/\/e.issuu.com\/embed.html[^\"]+?)\"/ism",$initial_page_data,$matches);
if(count($matches) == 1) {
 $matching_url = html_entity_decode($matches[0]);
 print "Found one matching embedded URL: $matching_url\n";
 if(preg_match("/u=(.*?)[&\"$]/",$matching_url,$matches)) {
  $matching_url_user = $matches[1];
  print " - User ID is $matching_url_user\n";
 }
 else {
  print "ERROR: unable to extract user (u=...) portion of matching URL.\n";
  exit(3);
 }
 if(preg_match("/d=(.*?)[&\"$]/",$matching_url,$matches)) {
  $matching_url_data = $matches[1];
  print " - Data ID is $matching_url_data\n";
 }
 else {
  print "ERROR: unable to extract data (d=...) portion of matching URL.\n";
  exit(3);
 }
 
}
else {
 print "Found " . count($matches) . " matching embedded URLs in source of '$url', aborting.\n";
 exit(2);
}
print "Fetching matching embedded URL... ";
$embedded_page_data = http_fetch($matching_url);
print "OK\n";
#print "Fetched embedded page data:\n";
#print $embedded_page_data . "\n";

$manufactured_url = 'https://reader3.isu.pub/' . $matching_url_user . '/' . $matching_url_data . '/reader3_4.json';
print "Fetching URL: $manufactured_url\n";

$fetched_json = http_fetch($manufactured_url);

#print "found JSON ... $fetched_json\n";

# now we want document/pages/...

if($parsed_json = json_decode($fetched_json,1)) {
 # continue...
}
else {
 print "ERROR: Failed to decode JSON.\n";
 exit(5);
}

print "Downloading " . count($parsed_json['document']['pages']) . " pages...";

foreach($parsed_json['document']['pages'] as $page) {
 http_fetch_file('https://' . $page['imageUri'],basename($page['imageUri']));
 print ".";
}
print " done.\n";

# now convert to pdf using imagemagick

print "Converting to PDF ... ";
$output_filename = $matching_url_data . ".pdf";
shell_exec("convert page_?.jpg page_??.jpg page_???.jpg " . escapeshellarg($output_filename));
print $output_filename . "\n";

print "Cleaning up single page image files ... ";
shell_exec("rm page_?.jpg page_??.jpg page_???.jpg");
print "done.\n";

exit(0);


function http_fetch($url) {
 $cmd = "curl --no-head --silent --compressed " . escapeshellarg($url);
 return shell_exec($cmd);
}

function http_fetch_file($url,$file) {
 $cmd = "curl --no-head --silent --compressed -o " . escapeshellarg($file) . " " . escapeshellarg($url);
 return shell_exec($cmd);
}

function usage() {
 global $argv;
 print $argv[0] . " <url>\n";
 print " .. where <url> is an http or https URL\n";
 exit(1);
}
?>
